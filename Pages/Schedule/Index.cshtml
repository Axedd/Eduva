@page
@model SchoolSystem.Pages.Schedule.IndexModel
@{
    // Sample test children data for demonstration
    var testChildren = new List<(string Name, int Top)>
    {
        ("Child A", 10),   // Position at 10px
        ("Child B", 40),   // Position at 40px
        ("Child C", 70),   // Position at 70px
        ("Child D", 100),  // Position at 100px
        ("Child E", 130)   // Position at 130px
    };
}

@section Styles {
    <style>
        .schedule-header {
            background-color: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
            margin-bottom: 10px; /* Space below header */
        }

        .schedule-container {
            display: flex; /* Flexbox for the main container */
        }

        .schedule-column {
            display: flex;
            flex-direction: column; /* Each day as a single column */
            flex: 1; /* Equal width for each column */
            padding: 0 5px; /* Add some padding between columns */
            border: 1px solid #dee2e6; /* Optional: add border to columns */
            position: relative; /* Allow absolute positioning for children */
        }

        .module-column {
            flex: 0 0 150px; /* Fixed width for the module column */
            padding-right: 10px; /* Space between module column and day columns */
        }

        .schedule-cell {
            border: 1px solid #dee2e6;
            padding: 5px;
            height: 120px; /* Fixed height for each module */
            box-sizing: border-box;
            margin-bottom: 5px; /* Space between cells */
            position: relative; /* Allow for child positioning */
        }

        .schedule-item {
            background-color: #e9ecef;
            border-radius: 4px;
            padding: 5px;
            font-size: 0.8em;
            overflow: hidden;
            position: absolute; /* Allow for dynamic positioning */
            width: calc(100% - 10px); /* Full width minus padding */
            left: 5px; /* Align to the left */
            transition: top 0.2s; /* Smooth position transitions */
        }
    </style>
}

<div class="container-fluid mt-3">
    <div class="row schedule-header">
        <div class="col">
            <h2 class="text-center">Week @Model.WeekNum - @Model.Week[0].Year</h2>
        </div>
    </div>
    <div class="row schedule-header text-center">
        <div class="col"></div>
        @foreach (var date in Model.Week)
        {
            <div class="col">@date.DayOfWeek (@date.ToString("d/M"))</div>
        }
    </div>
    <div class="schedule-container">
        <!-- Flex container for the schedule -->
        <div class="module-column">
            <!-- Fixed column for modules -->
            <div class="schedule-cell module-cell">
                <div class="module-info">1. modul</div>
                <div class="module-time">8:00 - 9:30</div>
            </div>
            <div class="schedule-cell module-cell">
                <div class="module-info">2. modul</div>
                <div class="module-time">10:00 - 11:30</div>
            </div>
            <div class="schedule-cell module-cell">
                <div class="module-info">3. modul</div>
                <div class="module-time">12:00 - 13:30</div>
            </div>
            <div class="schedule-cell module-cell">
                <div class="module-info">4. modul</div>
                <div class="module-time">13:45 - 15:15</div>
            </div>
        </div>

        @foreach (var date in Model.Week)
        {
            <div class="schedule-column day-column">
                <div class="schedule-item" style="top: 90px;">TEST 1</div>
                <div class="schedule-item" style="top: 180px;">TEST 2</div>
                <div class="schedule-item" style="top: 270px;">TEST 3</div>
                <div class="schedule-item" style="top: 270px;">TEST 4</div>
            </div>
        }
    </div>
</div>