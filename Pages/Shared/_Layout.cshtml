<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Eduva</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SchoolSystem.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    @RenderSection("Styles", required: false)
</head>
<body>
    <header class="header">
        <div class="header-logo">
            <button class="toggle-sidebar">☰</button>
            Eduva
        </div>
        <div class="header-actions">
            <div class="mr-2">
                <partial name="_LoginStatusPartial" />
            </div>
        </div>

    </header>

    <!-- Sidebar -->
    <div class="sidebar">
        <h2>Menu</h2>
        <ul>
            <li><a href="#">Dashboard</a></li>
            <li><a asp-area="" asp-page="/Schedule/Index">Schedule</a></li>
            <li><a href="#">Grades</a></li>
            <li><a href="#">Reports</a></li>
            <li><a href="#">Settings</a></li>
            @if (User.IsInRole("Admin")) {
            <li><a href="/Admin">Admin Panel</a></li>
            }
        </ul>
    </div>

    <div class="app-container">
        <main role="main" class="pb-3">
            @if (!ViewContext.RouteData.Values["page"].ToString().Contains("/Account") && !ViewContext.RouteData.Values["page"].ToString().Contains("/Admin"))
            {
                // Initialize studentId and teacherId as nullable long
                long? studentId = null;
                long? teacherId = null;

                // Check if ViewData contains the keys before accessing
                if (ViewData.ContainsKey("StudentId") && ViewData["StudentId"] is long)
                {
                    studentId = (long)ViewData["StudentId"];
                }

                if (ViewData.ContainsKey("TeacherId"))
                {
                    teacherId = ViewData["TeacherId"] as long?;
                }

                // Default actualId to 0
                long actualId = 0;

                // Assign actualId based on the presence of studentId or teacherId
                if (studentId.HasValue)
                {
                    actualId = studentId.Value; // Assign value if studentId is not null
                }
                else if (teacherId.HasValue)
                {
                    actualId = teacherId.Value; // Assign value if teacherId is not null
                }

                // Determine the userType based on the presence of studentId or teacherId
                string? userType = null;

                if (actualId != 0)
                {
                    userType = studentId.HasValue ? "Student" : "Teacher";
                }

                // Invoke the component with actualId and userType
                @await Component.InvokeAsync("UserHeaderInfo", new { id = actualId, type = userType })
                ;
            }
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>